version: "3"
services:
  curator_nginx:
    image: nginx:${NGINX_VERSION}
    container_name: ${PROJECT_NAME}_cdcs_nginx
    restart: always
    ports:
      - "${NGINX_PORT_80}:80"
      - "${NGINX_PORT_443}:443"
    depends_on:
      - cdcs
    environment:
      - HOSTNAME=${HOSTNAME}
    volumes:
      - cdcs_socket:/tmp/curator/
      - cdcs_static:/srv/curator_static
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/${SERVER_CONF}.conf:/etc/nginx/templates/default.conf.template
      # If using SSL, put your SSL key and certificate into the ./nginx/ folder and uncomment the following
      #   lines to have these files mounted into the nginx webserver container (you may need to adjust the permissions
      #   on these files to "600" or nginx may give errors)
      #- ./nginx/nexuslims.SSL.key:/etc/nginx/cdcs.key
      #- ./nginx/nexuslims.SSL.crt:/etc/nginx/cdcs.crt
  curator_postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: ${PROJECT_NAME}_cdcs_postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASS}
      - POSTGRES_DB=${POSTGRES_DB}
  curator_redis:
    image: redis:${REDIS_VERSION}
    container_name: ${PROJECT_NAME}_cdcs_redis
    command: redis-server --requirepass ${REDIS_PASS}
    restart: always
    volumes:
      - redis_data:/data
  cdcs:
    image: ${IMAGE_NAME}:${IMAGE_VERSION}
    container_name: ${PROJECT_NAME}_cdcs
    restart: always
    depends_on:
      - curator_redis
      - curator_postgres
    volumes:
      - cdcs_socket:/tmp/curator/
      - cdcs_static:/srv/curator/static.prod

    # if you want to customize the NexusLIMS application settings, you can override settings by uncommenting this line
    # and setting the "SETTINGS" variable appropriately (see README.md for details)
      # - ./cdcs/${SETTINGS}.py:/srv/curator/${PROJECT_NAME}/${SETTINGS}.py

    # if you need to sign SAML requests for SSO, you should put the certificate and key in the "./deploy/cdcs/" folder
    # and uncomment the following lines to mount them into the container. The paths on the left of the ":" should be
    # changed to whatever the names of your key/cert files are; the paths on the right side of the ":" should match
    # the values of SAML_KEY_FILE and SAML_CERT_FILE in the "./deploy/saml2/.env" file
      # - ./cdcs/SAML.crt:/srv/curator/certs/SAML.crt
      # - ./cdcs/SAML.key:/srv/curator/certs/SAML.key
    environment:
      - DJANGO_SETTINGS_MODULE=${PROJECT_NAME}.${SETTINGS}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - SERVER_URI=${SERVER_URI}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - SERVER_NAME=${SERVER_NAME:-}
      - MONGO_HOST=${PROJECT_NAME}_cdcs_mongo
      - MONGO_PORT=${MONGO_PORT:-27017}
      - MONGO_DB=${MONGO_DB}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASS}
      - POSTGRES_HOST=${PROJECT_NAME}_cdcs_postgres
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PASS}
      - REDIS_HOST=${PROJECT_NAME}_cdcs_redis
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASS=${REDIS_PASS}
      - UWSGI_PROCESSES=${UWSGI_PROCESSES:-10}
    env_file:
      - ./saml2/.env
      - ./handle/.env
      - ./extra/.env
    command:
      - ${PROJECT_NAME}

volumes:
  postgres_data:
  redis_data:
  cdcs_socket:
  cdcs_static:
